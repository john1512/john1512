<%
  dom_id ||= 'menu'
  css ||= 'menu'
  hide_children = RefinerySetting.find_or_set(:menu_hide_children, false) unless defined?(hide_children)
  cache_key = [Refinery.base_cache_key]
  cache_key << (action_suffix ||= RefinerySetting.find_or_set(:refinery_menu_cache_action_suffix, "site_menu"))
  cache_key << extra_suffix if defined?(extra_suffix) and extra_suffix.present?
  cache_key << request.path
  cache(cache_key.compact.join('_')) do
    # Select top menu items unless 'roots' is passed in.
    collection ||= @menu_pages
    roots ||= collection.select { |m| m.parent_id == nil }

    sub_roots = @menu_pages.reject do |p|
      if p.nil? || @page.nil? then true
      else 
        p.parent_id != @page.id
      end
    end
    if roots.any?
      sibling_count = roots.size - 1
-%>
<!-- regarding apply_css: if you don't care about class='first' class='last' or class='selected' set apply_css to false for speed. -->
      <nav id='<%= dom_id %>' class='<%= %W(#{css} clearfix).join(' ') %>'>
        <ul id="navigation">
          <%= render :partial => "/shared/menu_branch",
                     :collection => roots,
                     :locals => {
                       :hide_children => true,
                       :sibling_count => sibling_count,
                       :collection => collection,
                       :apply_css => false
                     }
          -%>
	 </ul>
   <% unless sub_roots.empty? %>
   <ul id="sub_navigation">
     <%= render :partial => '/shared/menu_branch',
             :collection => sub_roots,
             :locals => {
                :apply_css => false,
                :hide_children => true,
#               :roots => @menu_pages.reject{|p| p.parent_id != @page.root.id },
                :sibling_count => 1,
                :collection => collection,
#               :extra_suffix => 'submenu'
             } 
	   -%>
   </ul>
 <% end %>
      </nav>
  <%
    end
  end
-%>
